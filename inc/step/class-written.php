<?php
/**
 * Class CoursePress_Step_Written
 *
 * @since 3.0
 * @package CoursePress
 */
class CoursePress_Step_Written extends CoursePress_Step {
	protected $type = 'written';

	protected function get_keys() {
		$keys = parent::get_keys();
		array_push( $keys, 'placeholder_text', 'options' );

		return $keys;
	}

	function setUpStepMeta() {
		parent::setUpStepMeta(); // TODO: Change the autogenerated stub

		$this->__set( 'module_type', 'input-written' );
	}

	function get_question() {
		$templates = '';
		$unit = $this->get_unit();
		$course_id = $unit->__get( 'course_id' );
		$unit_id = $unit->__get( 'ID' );
		$step_id = $this->__get( 'ID' );
		$questions = $this->__get( 'questions' );

		if ( ! empty( $questions ) ) {
			foreach ( $questions as $index => $question ) {
				$template = '';

				if ( ! empty( $question['question'] ) ) {
					$txt_question = wpautop( $question['question'] );
					$template .= $this->create_html( 'div', array( 'class' => 'question' ), $txt_question );
				}

				$name = sprintf( 'module[%d][%d][%d][%d]', $course_id, $unit_id, $step_id, $index );
				$attr = array(
					'name' => $name,
					'class' => 'course-step-written',
					'data-limit' => (int) $question['word_limit'],
					'placeholder' => esc_attr( $question['placeholder_text'] ),
				);
				if ( $this->is_preview() ) {
					$attr['readonly'] = 'readonly';
					$attr['disabled'] = 'disabled';
				}
				$template .= $this->create_html( 'textarea', $attr );
				$templates .= $this->create_html( 'div', array(), $template );
			}
		}

		return $templates;
	}
}